{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    //"DefaultConnection2": "Server=DESKTOP-0820HOU;Database=aspnet-WebApplicationAbad;User Id=sa;Password=123;TrustServerCertificate=true;MultipleActiveResultSets=true",
    "DataConnection": "Server=SQL8010.site4now.net;Database=db_a94fd1_abad;User Id=db_a94fd1_abad_admin;Password=mohamed1455;TrustServerCertificate=true;MultipleActiveResultSets=true;Connection Timeout=30;"
    //"DataConnection": "server=DESKTOP-07FF9I5\\MYSQL;Database=DatabaseAbad;Trusted_Connection=True;TrustServerCertificate=True;"
    //"DataConn": "server=DESKTOP-0820HOU;Database=aspnet-WebApplicationAbad;Trusted_Connection=True;TrustServerCertificate=True;"

  },

  "Hunter": {
    "ApiKey": "56f775634e0084ebe309b995378908a29e7182af"
  },



  "tamaraPayment": {
    "clientVersion": "1.0.0",
    "baseUrl": "https://api-sandbox.tamara.co",
    "requestTimeout": 10,
    "apiToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhY2NvdW50SWQiOiIwYmVmZDQ5Ni1jZjNhLTQ2NzktYTMwMy1iZmQ1ZWVlYWYxZjEiLCJ0eXBlIjoibWVyY2hhbnQiLCJzYWx0IjoiZjQ3M2NkZDJiMzU5NmQzZTUzMjBmM2ViMmJhMThlYmQiLCJyb2xlcyI6WyJST0xFX01FUkNIQU5UIl0sImlhdCI6MTcyMDM1OTk4MiwiaXNzIjoiVGFtYXJhIn0.w0xQpdmth2-U-YgrfuuXIqaQ3fnY4vDxLK0MjtZPZOYaTiT69r1-J8DRW3cNbmXMlPTLxynGyMgitm9FKbWkd53R5H90ckIe08HYnew0rUh-J0Ixrw-XbBeRsmrSAb12q5mD0NUa-UDLabpRd5luoHpGLLVSLhv1yGmGsWdGpf1oWfKCkLCZAiv8HrTZ41FN3Bxsr5G054ts4i97qt6n_pkimlz8UVYQa0tFM5qNLBJyu5q23mqRfYddp38RkMrJp9Fui8f8JAMe4n1ma4VWznd9xf-4bhvv5FLlL67qJvK4h73GFK4Ds2lalT9VGXjG4GZDdFRUXQwmC5din8_AvQ",
    "notificationPrivateKey": "905fbf94-5a85-4ef0-93ef-8cab359f6e1a",
    "paths": {
      "getPaymentType": "/checkout/payment-types",
      "createCheckout": "/checkout",
      "authoriseOrder": "/orders/{orderId}/authorise",
      "cancelOrder": "/orders/{orderId}/cancel",
      "capture": "/payments/capture",
      "refund": "/merchants/orders/{orderId}/refund",
      "getOrderDetails": "/orders/{orderId}",
      "updateOrderReferenceId": "/orders/{orderId}/reference-id",
      "registerWebHook": "/webhooks",
      "retrieveWebhook": "/webhooks/{webhookId}",
      "removeWebhook": "/webhooks/{webhookId}",
      "updateWebhook": "/webhooks/{webhookId}"
    }
  }


}

